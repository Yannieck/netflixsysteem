CREATE DATABASE IF NOT EXISTS `null pointer videos`;

USE `null pointer videos`;

CREATE TABLE IF NOT EXISTS `membership` (
	Name VARCHAR(6) NOT NULL,
    Price DOUBLE(2,2) NOT NULL,
    
    CONSTRAINT PRIMARY KEY (Name)
);

CREATE TABLE IF NOT EXISTS `account` (
	Id INT NOT NULL AUTO_INCREMENT,
    MembershipName VARCHAR(6) NOT NULL,
    Name VARCHAR(80)DEFAULT 'Unknown',
    Username VARCHAR(40) NOT NULL,
    Email VARCHAR(300) NOT NULL,
    Password VARCHAR(255) NOT NULL,
    Biography VARCHAR(100),
    Photo VARCHAR(150),
    GithubLink VARCHAR(40),
    
    CONSTRAINT PRIMARY KEY (Id),
    CONSTRAINT FOREIGN KEY (MembershipName) REFERENCES membership(Name) ON DELETE NO ACTION ON UPDATE CASCADE,
   	CONSTRAINT UNIQUE (Username),
    CONSTRAINT UNIQUE (Email),
    CONSTRAINT UNIQUE (GithubLink)
);

CREATE TABLE IF NOT EXISTS `question` (
	Title VARCHAR(100) NOT NULL,
    AccountId INT NOT NULL,
    Content VARCHAR(8000) NOT NULL,
    AskDate TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    
    CONSTRAINT PRIMARY KEY (Title),
    CONSTRAINT FOREIGN KEY (AccountId) REFERENCES account(Id) ON DELETE NO ACTION ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `video` (
	Id INT NOT NULL AUTO_INCREMENT,
    QuestionTitle VARCHAR(100) NOT NULL,
    AccountId INT NOT NULL,
    Description VARCHAR(8000),
    UploadDate TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    File VARCHAR(150) NOT NULL,
    
    CONSTRAINT PRIMARY KEY (Id),
    CONSTRAINT FOREIGN KEY (QuestionTitle) REFERENCES question(Title) ON DELETE NO ACTION ON UPDATE CASCADE,
    CONSTRAINT FOREIGN KEY (AccountId) REFERENCES account(Id) ON DELETE NO ACTION ON UPDATE CASCADE,
    CONSTRAINT UNIQUE (File)
);

CREATE TABLE IF NOT EXISTS  `comment` (
	Id INT NOT NULL AUTO_INCREMENT,
    VideoId INT NOT NULL,
    AccountId INT NOT NULL,
    Content VARCHAR(255) NOT NULL,
 
    CONSTRAINT PRIMARY KEY (Id),
    CONSTRAINT FOREIGN KEY (VideoId) REFERENCES video(Id) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FOREIGN KEY (AccountId) REFERENCES account(Id) ON DELETE NO ACTION ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `bookmark` (
	AccountId INT NOT NULL,
    QuestionTitle VARCHAR(100) NOT NULL,
    
    CONSTRAINT PRIMARY KEY (AccountId, QuestionTitle),
    CONSTRAINT FOREIGN KEY (AccountId) REFERENCES account(Id) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FOREIGN KEY (QuestionTitle) REFERENCES question(Title) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `like` (
    Id INT NOT NULL AUTO_INCREMENT,
	AccountId INT NOT NULL,
    CommentId INT,
    VideoId INT,
    Type BOOLEAN NOT NULL,
    
    CONSTRAINT PRIMARY KEY (Id),
    CONSTRAINT FOREIGN KEY (AccountId) REFERENCES account(Id) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FOREIGN KEY (CommentId) REFERENCES `comment`(Id),
    CONSTRAINT FOREIGN KEY (VideoId) REFERENCES video(Id)
);

CREATE TABLE IF NOT EXISTS `tag` (
	Id INT NOT NULL AUTO_INCREMENT,
    Category VARCHAR(15) NOT NULL,
    
    CONSTRAINT PRIMARY KEY (Id)
);

CREATE TABLE IF NOT EXISTS `subtag` (
	Id INT NOT NULL AUTO_INCREMENT,
    TagId INT NOT NULL,
    SubCategory VARCHAR(25) NOT NULL,
    
    CONSTRAINT PRIMARY KEY (Id),
    CONSTRAINT FOREIGN KEY (TagId) REFERENCES tag(Id) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `tag_question` (
	SubTagId INT NOT NULL,
    QuestionTitle VARCHAR(100) NOT NULL,
    
    CONSTRAINT PRIMARY KEY (SubTagId, QuestionTitle),
    CONSTRAINT FOREIGN KEY (SubTagId) REFERENCES subtag(Id) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FOREIGN KEY (QuestionTitle) REFERENCES question(Title) ON DELETE CASCADE ON UPDATE CASCADE
)